#!/usr/bin/perl
#
# Copyright 2014 Pierre Mavro <deimos@deimos.fr>
# Copyright 2014 Vivien Didelot <vivien@didelot.org>
#
# Licensed under the terms of the GNU GPL v3, or any later version.
#
# This script is meant to use with i3blocks. It parses the output of the "acpi"
# command (often provided by a package of the same name) to read the status of
# the battery, and eventually its remaining time (to full charge or discharge).
#
# The color will gradually change for a percentage below 85%, and the urgency
# (exit code 33) is set if there is less that 5% remaining.

use strict;
use warnings;
use utf8;

my $acpi;
my $status;
my $color;
my $percent;
my $full_text;
my $short_text;
my $bat_number = $ENV{BLOCK_INSTANCE} || 0;

# read the first line of the "acpi" command output
open (ACPI, "acpi -b | grep 'Battery $bat_number' |") or die;
$acpi = <ACPI>;
close(ACPI);

# fail on unexpected output
if ($acpi !~ /: (\w+), (\d+)%/) {
	die "$acpi\n";
}

$status = $1;
$percent = $2;
$full_text = "";
#if ($status eq 'Discharging') {
#	$full_text .= '  ';
#} else {
#	$full_text .= ' ⚡';
#}
$full_text .= "$percent%";


if ($acpi =~ /(\d\d:\d\d:\d\d)/) {
	$full_text .= " ($1)";
}


$color = "#9ECE9E\n";

#If discharching, show appropriate battery indicator
#and set the approp color
if ($status eq 'Discharging') {
    if ($percent < 5){
        exit(33);
    }elsif ($percent <= 10) {
        $full_text = "  $full_text";
		$color = "#e89393\n";
    }elsif ($percent <= 25) {
        $full_text = "  $full_text";
		$color = "#e89393\n";
	} elsif ($percent <= 50) {
        $full_text = "  $full_text";
		$color = "#dfaf8f\n";
	} elsif ($percent <= 75) {
        $full_text = "  $full_text";
		$color = "#dfaf8f\n";
	}else{
        $full_text = "  $full_text";
    }
}else{
    $full_text = "  $full_text";
}

# print text
$short_text = $full_text;
print "$full_text\n";
print "$short_text\n";
print $color;

exit(0);
